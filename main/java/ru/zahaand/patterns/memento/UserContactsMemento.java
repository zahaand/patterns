package ru.zahaand.patterns.memento;

/**
 * <h1>Паттерн Memento. Снимок</h1>
 * Интерфейс {@code UserContactsMemento} является частью реализации паттерна "Снимок" (Memento).
 * Он предоставляет способ сохранения и восстановления состояния контактной информации пользователя без нарушения инкапсуляции.
 * Паттерн "Снимок" позволяет сохранять внутреннее состояние объекта так, чтобы оно могло быть восстановлено позже,
 * что полезно для реализации функционала отмены изменений или возврата к предыдущему состоянию.
 *
 * <p>Паттерн "Снимок" обеспечивает следующие основные преимущества:</p>
 * <ul>
 *     <li><strong>Инкапсуляция</strong>: Скрывает детали реализации состояния объекта от клиента.</li>
 *     <li><strong>Гибкость</strong>: Позволяет сохранять и восстанавливать различные версии состояния объекта.</li>
 *     <li><strong>Откат изменений</strong>: Облегчает реализацию механизма отмены действий путем восстановления предыдущих состояний.</li>
 * </ul>
 *
 * <h3>Пример использования:</h3>
 * <pre>
 *     // Создание объекта пользователя с начальной контактной информацией
 *     User user = new User(...);
 *     UserContactsManager userContactsManager = new UserContactsManager();
 *
 *     // Сохранение начального состояния контактной информации
 *     userContactsManager.saveUserContactsState(user);
 *
 *     // Изменение контактной информации пользователя
 *     user.setEmail("new-email@example.com");
 *     user.setMobilePhone("+1234567890");
 *
 *     // Сохранение измененного состояния контактной информации
 *     userContactsManager.saveUserContactsState(user);
 *
 *     // Восстановление предыдущего состояния контактной информации пользователя
 *     userContactsManager.undoUserContactsState(user);
 * </pre>
 * <p>
 * В этом примере демонстрируется создание объекта {@code User}, сохранение его текущего состояния контактной информации в снимок,
 * изменение этой информации и последующее восстановление предыдущего состояния из сохраненного снимка. Это показывает, как можно использовать паттерн Memento
 * для управления состоянием в контексте изменения данных пользователя.
 *
 * @see UserContactsManager
 */
public interface UserContactsMemento {

    String mobilePhone();

    String email();
}
